LICENSE = "MIT"
DESCRIPTION = "Recipe for building images for an entire cluster"

require recipes-mukube/images/mukube-image.bb

IMAGE_INSTALL += "mukube-configurator k8s-testing"

MUKUBE_CONFIG_PARTITION = "${DEPLOY_DIR_IMAGE}/test_config.ext4"

# Cluster code: 

python do_create_wks() {
    partitions_dir = os.path.join(d.getVar("DEPLOY_DIR_IMAGE"),"configs")
    config_partitions = [f for f in os.listdir(partitions_dir)]
    wks_in_file = d.getVar("WKS_FULL_PATH")
    
    with open(wks_in_file, 'r') as f:
        template = f.read()
    
    # Extract the path string that points to the current file system partition
    # The wks file reads:  
    # part /config --source rawcopy --sourceparams="file=<path-matched>" 
    replace_string = template.split("part /config")[1].split("file=")[1].split("\"")[0]
    
    for config in config_partitions:
        file_name, _ = os.path.splitext(config)
        wks_out_file = os.path.join(d.getVar('WORKDIR'), "cluster-wks", file_name + ".wks")
        with open(wks_out_file, "w") as f:
            f.write(template.replace(replace_string, os.path.join(partitions_dir, config)))
}

addtask do_create_wks after do_image_wic before do_image_complete
do_create_wks[cleandirs] = "${WORKDIR}/cluster-wks"

do_images_cluster() {
	# Code is adapted from the IMAGE_CMD_wic in image_types_wic.bbclass
	cluster_wic="${WORKDIR}/cluster-wic"
	tmp_wic="${WORKDIR}/tmp-wic"

	# Iterates over the wks files generated by the do_create_wks task
	for wks in ${WORKDIR}/cluster-wks/*
	do
		if [ -e "$tmp_wic" ]; then
			# Ensure we don't have any junk leftover from a previously interrupted
			# do_image_wic execution
			rm -rf "$tmp_wic"
		fi
		node=$(basename $wks .wks)
		mkdir -p $cluster_wic/$node
		out="${IMGDEPLOYDIR}/${IMAGE_NAME}-${node}"

		BUILDDIR="${TOPDIR}" PSEUDO_UNLOAD=1 wic create "$wks" --vars "${STAGING_DIR}/${MACHINE}/imgdata/" -e "${IMAGE_BASENAME}" -o "$cluster_wic/$node" -w "$tmp_wic" ${WIC_CREATE_EXTRA_ARGS}
		mv "$cluster_wic/$node/$node"*.direct "$out${IMAGE_NAME_SUFFIX}.wic"
	done	
}

addtask do_images_cluster after do_create_wks before do_image_complete
do_images_cluster[cleandirs] = "${WORKDIR}/cluster-wic"
